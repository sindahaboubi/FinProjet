{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { AuthentificationService } from 'src/app/service/authentification.service';\nimport { ChefProjetServiceService } from 'src/app/service/chef-projet-service.service';\nimport { MembreService } from 'src/app/service/membre.service';\nimport { ProjetServiceService } from 'src/app/service/projet-service.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/authentification.service\";\nimport * as i2 from \"src/app/service/membre.service\";\nimport * as i3 from \"src/app/service/projet-service.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"src/app/service/chef-projet-service.service\";\nimport * as i6 from \"@angular/common\";\nfunction ModifierProfileComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Le nom est requis. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ModifierProfileComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Le pr\\u00E9nom est requis. \");\n    i0.ɵɵelementEnd();\n  }\n}\nvar ModifierProfileComponent = /** @class */function () {\n  function ModifierProfileComponent(authService, membreService, projetService, formBuilder, chefProjetService) {\n    this.authService = authService;\n    this.membreService = membreService;\n    this.projetService = projetService;\n    this.formBuilder = formBuilder;\n    this.chefProjetService = chefProjetService;\n  }\n  ModifierProfileComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    var userRolesToken = this.authService.getUserRolesToken(sessionStorage.getItem('token'));\n    if (userRolesToken.roles.includes('chefProjet')) {\n      this.role = 'chefProjet';\n      console.log('chefProjet = ', userRolesToken.chefProjet);\n    } else {\n      var roleToken = userRolesToken.roles;\n      this.role = roleToken.find(function (role) {\n        return role.pk.membreId == _this.membreService.getMembreFromToken().id && role.pk.projetId == _this.projetService.getProjetFromLocalStorage().id;\n      }).type;\n      this.profilMembreForm = this.formBuilder.group({\n        nom: ['', Validators.required],\n        prenom: ['', Validators.required],\n        email: ['', Validators.required]\n      });\n      console.log('Membre = ', userRolesToken.membre);\n    }\n  };\n  ModifierProfileComponent.prototype.modifierProfil = function (membreId) {\n    if (this.profilMembreForm.valid) {\n      var membreModifie = this.profilMembreForm.value;\n      // Effectuez vos opérations supplémentaires si nécessaire\n      this.membreService.modifierProfil(membreId, membreModifie).subscribe(function (membreModifie) {\n        console.log('Profil modifié avec succès');\n      }, function (error) {\n        console.log('Erreur de modification de profil !');\n      });\n    }\n  };\n  ModifierProfileComponent.ɵfac = function ModifierProfileComponent_Factory(t) {\n    return new (t || ModifierProfileComponent)(i0.ɵɵdirectiveInject(i1.AuthentificationService), i0.ɵɵdirectiveInject(i2.MembreService), i0.ɵɵdirectiveInject(i3.ProjetServiceService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.ChefProjetServiceService));\n  };\n  ModifierProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModifierProfileComponent,\n    selectors: [[\"app-modifier-profile\"]],\n    decls: 13,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"nom\"], [\"type\", \"text\", \"id\", \"nom\", \"formControlName\", \"nom\", \"required\", \"\"], [4, \"ngIf\"], [\"for\", \"prenom\"], [\"type\", \"text\", \"id\", \"prenom\", \"formControlName\", \"prenom\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function ModifierProfileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ModifierProfileComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.modifierProfil();\n        });\n        i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n        i0.ɵɵtext(3, \"Nom:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵtemplate(5, ModifierProfileComponent_div_5_Template, 2, 0, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\")(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Pr\\u00E9nom:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 5);\n        i0.ɵɵtemplate(10, ModifierProfileComponent_div_10_Template, 2, 0, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 6);\n        i0.ɵɵtext(12, \"Modifier le profil\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.membreForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.membreForm.controls[\"nom\"].invalid && ctx.membreForm.controls[\"nom\"].touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.membreForm.controls[\"prenom\"].invalid && ctx.membreForm.controls[\"prenom\"].touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.membreForm.invalid);\n      }\n    },\n    dependencies: [i6.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName]\n  });\n  return ModifierProfileComponent;\n}();\nexport { ModifierProfileComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}