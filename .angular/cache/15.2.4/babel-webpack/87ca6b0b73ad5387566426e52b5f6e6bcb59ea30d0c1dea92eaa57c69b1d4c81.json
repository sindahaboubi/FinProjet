{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport jwt_decode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nvar URL1 = \"http://localhost:9999/authentification-service/auth\";\nvar AuthentificationService = /** @class */function () {\n  function AuthentificationService(http) {\n    this.http = http;\n  }\n  AuthentificationService.prototype.isLoggedIn = function () {\n    var token = sessionStorage.getItem('token');\n    return !!token;\n  };\n  AuthentificationService.prototype.login = function (credentials) {\n    return this.http.post(\"\".concat(URL1, \"/login\"), credentials);\n  };\n  AuthentificationService.prototype.extractRolesFromToken = function (decodedToken) {\n    var roles = decodedToken.roles || [];\n    return roles;\n  };\n  AuthentificationService.prototype.decodeToken = function (token) {\n    var decodedToken = jwt_decode(token);\n    return decodedToken;\n  };\n  AuthentificationService.prototype.getUserRolesToken = function (token) {\n    var decodedToken = this.decodeToken(token);\n    var roles = this.extractRolesFromToken(decodedToken);\n    if (roles.includes('chefProjet')) {\n      var id = decodedToken.id,\n        email = decodedToken.email,\n        nom = decodedToken.nom,\n        prenom = decodedToken.prenom,\n        adresse = decodedToken.adresse,\n        username = decodedToken.username,\n        telephone = decodedToken.telephone,\n        status_1 = decodedToken.status,\n        dateInscription = decodedToken.dateInscription,\n        photo = decodedToken.photo;\n      // Décoder la photo depuis la chaîne base64 en tableau d'octets\n      var decodedPhoto = atob(photo);\n      var bytes = new Uint8Array(decodedPhoto.length);\n      for (var i = 0; i < decodedPhoto.length; i++) {\n        bytes[i] = decodedPhoto.charCodeAt(i);\n      }\n      // Créer un objet Blob à partir du tableau d'octets\n      var blob = new Blob([bytes], {\n        type: 'image/jpeg'\n      });\n      var chefProjet = {\n        id: id,\n        email: email,\n        nom: nom,\n        prenom: prenom,\n        adresse: adresse,\n        username: username,\n        telephone: telephone,\n        dateInscription: new Date(dateInscription),\n        photo: URL.createObjectURL(blob)\n      };\n      return {\n        chefProjet: chefProjet,\n        roles: roles\n      };\n    } else {\n      var id = decodedToken.id,\n        email = decodedToken.email,\n        nom = decodedToken.nom,\n        prenom = decodedToken.prenom,\n        adresse = decodedToken.adresse,\n        username = decodedToken.username,\n        telephone = decodedToken.telephone,\n        status_2 = decodedToken.status,\n        dateInscription = decodedToken.dateInscription;\n      var membre = {\n        id: id,\n        email: email,\n        nom: nom,\n        prenom: prenom,\n        adresse: adresse,\n        username: username,\n        telephone: telephone,\n        status: status_2,\n        dateInscription: dateInscription\n      };\n      return {\n        membre: membre,\n        roles: roles\n      };\n    }\n  };\n  AuthentificationService.ɵfac = function AuthentificationService_Factory(t) {\n    return new (t || AuthentificationService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  AuthentificationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthentificationService,\n    factory: AuthentificationService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthentificationService;\n}();\nexport { AuthentificationService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}