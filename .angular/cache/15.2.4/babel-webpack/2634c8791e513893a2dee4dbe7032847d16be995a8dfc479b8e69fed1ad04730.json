{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component, ElementRef, HostListener } from \"@angular/core\";\nimport { ROUTES } from \"../sidebar/sidebar.component\";\nimport { Location } from \"@angular/common\";\nimport { Router } from \"@angular/router\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { InvitationComponent } from \"src/app/pages/dialogs/invitation/invitation.component\";\nimport { RoleService } from \"src/app/service/role.service\";\nimport { ToastrService } from \"ngx-toastr\";\nimport Swal from \"sweetalert2\";\nimport { MembreService } from \"src/app/service/membre.service\";\nimport { SearchPanelComponent } from \"src/app/pages/dialogs/search-panel/search-panel.component\";\nimport { AuthentificationService } from \"src/app/service/authentification.service\";\nimport { ProjetServiceService } from \"src/app/service/projet-service.service\";\nvar NavbarComponent = /** @class */function () {\n  function NavbarComponent(location, toastr, element, roleService, membreService, dialogInvitation, dialogRecherche, router, authentificationService, projetService) {\n    var _this = this;\n    this.toastr = toastr;\n    this.element = element;\n    this.roleService = roleService;\n    this.membreService = membreService;\n    this.dialogInvitation = dialogInvitation;\n    this.dialogRecherche = dialogRecherche;\n    this.router = router;\n    this.authentificationService = authentificationService;\n    this.projetService = projetService;\n    this.navbarScrolled = false;\n    this.mobile_menu_visible = 0;\n    this.isCollapsed = true;\n    // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n    this.updateColor = function () {\n      var navbar = document.getElementsByClassName('navbar')[0];\n      if (window.innerWidth < 993 && !_this.isCollapsed) {\n        navbar.classList.add('bg-white');\n        navbar.classList.remove('navbar-transparent');\n      } else {\n        navbar.classList.remove('bg-white');\n        navbar.classList.add('navbar-transparent');\n      }\n    };\n    this.location = location;\n    this.sidebarVisible = false;\n  }\n  NavbarComponent.prototype.onWindowScroll = function () {\n    this.navbarScrolled = window.pageYOffset > 0;\n  };\n  NavbarComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    if (this.authentificationService.getUserRolesToken(sessionStorage.getItem('token')).roles.includes('chefProjet')) {\n      this.role = 'chefProjet';\n    } else {\n      var roleToken = this.authentificationService.getUserRolesToken(sessionStorage.getItem('token')).roles;\n      this.role = roleToken.find(function (role) {\n        return role.pk.membreId == _this.membreService.getMembreFromToken().id && role.pk.projetId == _this.projetService.getProjetFromLocalStorage().id;\n      }).type;\n      console.log(\"wellllllltedd+\", this.role);\n    }\n    if (localStorage.getItem('projet')) {\n      /** pour chercher un membre */\n      this.membreService.afficherTousMembres().subscribe(function (data) {\n        _this.membresApp = data;\n      });\n    }\n    if (localStorage.getItem('membre')) this.membre = JSON.parse(localStorage === null || localStorage === void 0 ? void 0 : localStorage.getItem('membre'));\n    window.addEventListener(\"resize\", this.updateColor);\n    this.listTitles = ROUTES.filter(function (listTitle) {\n      return listTitle;\n    });\n    var navbar = this.element.nativeElement;\n    this.toggleButton = navbar.getElementsByClassName(\"navbar-toggler\")[0];\n    this.router.events.subscribe(function (event) {\n      _this.sidebarClose();\n      var $layer = document.getElementsByClassName(\"close-layer\")[0];\n      if ($layer) {\n        $layer.remove();\n        _this.mobile_menu_visible = 0;\n      }\n    });\n    if (this.membre) this.roleService.afficherListRoleParMembre(this.membre.id).subscribe(function (data) {\n      data = data.filter(function (role) {\n        return role.status == \"ATTENTE\";\n      });\n      _this.roleService.setRoles(data);\n      _this.listeRole = _this.roleService.getRoles();\n    });\n  };\n  NavbarComponent.prototype.collapse = function () {\n    this.isCollapsed = !this.isCollapsed;\n    var navbar = document.getElementsByTagName(\"nav\")[0];\n    if (!this.isCollapsed) {\n      navbar.classList.remove(\"navbar-transparent\");\n      navbar.classList.add(\"bg-white\");\n    } else {\n      navbar.classList.add(\"navbar-transparent\");\n      navbar.classList.remove(\"bg-white\");\n    }\n  };\n  NavbarComponent.prototype.sidebarOpen = function () {\n    var toggleButton = this.toggleButton;\n    var mainPanel = document.getElementsByClassName(\"main-panel\")[0];\n    var html = document.getElementsByTagName(\"html\")[0];\n    if (window.innerWidth < 991) {\n      mainPanel.style.position = \"fixed\";\n    }\n    setTimeout(function () {\n      toggleButton.classList.add(\"toggled\");\n    }, 500);\n    html.classList.add(\"nav-open\");\n    this.sidebarVisible = true;\n  };\n  NavbarComponent.prototype.sidebarClose = function () {\n    var html = document.getElementsByTagName(\"html\")[0];\n    this.toggleButton.classList.remove(\"toggled\");\n    var mainPanel = document.getElementsByClassName(\"main-panel\")[0];\n    if (window.innerWidth < 991) {\n      setTimeout(function () {\n        mainPanel.style.position = \"\";\n      }, 500);\n    }\n    this.sidebarVisible = false;\n    html.classList.remove(\"nav-open\");\n  };\n  NavbarComponent.prototype.sidebarToggle = function () {\n    // const toggleButton = this.toggleButton;\n    // const html = document.getElementsByTagName('html')[0];\n    var $toggle = document.getElementsByClassName(\"navbar-toggler\")[0];\n    if (this.sidebarVisible === false) {\n      this.sidebarOpen();\n    } else {\n      this.sidebarClose();\n    }\n    var html = document.getElementsByTagName(\"html\")[0];\n    if (this.mobile_menu_visible == 1) {\n      // $('html').removeClass('nav-open');\n      html.classList.remove(\"nav-open\");\n      if ($layer) {\n        $layer.remove();\n      }\n      setTimeout(function () {\n        $toggle.classList.remove(\"toggled\");\n      }, 400);\n      this.mobile_menu_visible = 0;\n    } else {\n      setTimeout(function () {\n        $toggle.classList.add(\"toggled\");\n      }, 430);\n      var $layer = document.createElement(\"div\");\n      $layer.setAttribute(\"class\", \"close-layer\");\n      if (html.querySelectorAll(\".main-panel\")) {\n        document.getElementsByClassName(\"main-panel\")[0].appendChild($layer);\n      } else if (html.classList.contains(\"off-canvas-sidebar\")) {\n        document.getElementsByClassName(\"wrapper-full-page\")[0].appendChild($layer);\n      }\n      setTimeout(function () {\n        $layer.classList.add(\"visible\");\n      }, 100);\n      $layer.onclick = function () {\n        //asign a function\n        html.classList.remove(\"nav-open\");\n        this.mobile_menu_visible = 0;\n        $layer.classList.remove(\"visible\");\n        setTimeout(function () {\n          $layer.remove();\n          $toggle.classList.remove(\"toggled\");\n        }, 400);\n      }.bind(this);\n      html.classList.add(\"nav-open\");\n      this.mobile_menu_visible = 1;\n    }\n  };\n  NavbarComponent.prototype.getTitle = function () {\n    var titlee = this.location.prepareExternalUrl(this.location.path());\n    if (titlee.charAt(0) === \"#\") {\n      titlee = titlee.slice(1);\n    }\n    for (var item = 0; item < this.listTitles.length; item++) {\n      if (this.listTitles[item].path === titlee) {\n        return this.listTitles[item].title;\n      }\n    }\n    return \"Dashboard\";\n  };\n  NavbarComponent.prototype.openSearchPanel = function () {\n    this.dialogRecherche.open(SearchPanelComponent, {\n      width: '800px',\n      position: {\n        top: '40px',\n        left: '350px'\n      },\n      height: '70px',\n      data: {\n        membres: this.membresApp\n      }\n    });\n  };\n  NavbarComponent.prototype.ngOnDestroy = function () {\n    window.removeEventListener(\"resize\", this.updateColor);\n  };\n  NavbarComponent.prototype.openDialogInvitation = function () {\n    this.dialogInvitation.open(InvitationComponent, {\n      width: '350px',\n      height: '420px',\n      data: {\n        projet: JSON.parse(localStorage.getItem('projet'))\n      }\n    });\n  };\n  NavbarComponent.prototype.accepter = function (role) {\n    var _this = this;\n    role.status = \"ACCEPTE\";\n    this.roleService.modifierRole(role).subscribe(function (data) {\n      console.log(data);\n      _this.listeRole.splice(_this.listeRole.indexOf(role), 1);\n      _this.toastr.success(\"vous avez accepté l'invitation\");\n    });\n  };\n  NavbarComponent.prototype.refuser = function (role) {\n    var _this = this;\n    Swal.fire({\n      title: \"Vous êtes sûr de refuser l'invitation\",\n      icon: 'info',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Oui',\n      cancelButtonText: 'Annuler',\n      background: 'rgba(0,0,0,0.9)',\n      backdrop: 'rgba(0,0,0,0.4)',\n      allowOutsideClick: false,\n      allowEscapeKey: false,\n      allowEnterKey: false,\n      focusConfirm: false\n    }).then(function (result) {\n      if (result.isConfirmed) {\n        _this.roleService.supprimerRole(role.pk, role.invitation.chefProjetId).subscribe(function (data) {\n          Swal.fire('Refus', 'Vous avez rejeté l offre', 'warning');\n          _this.listeRole.splice(_this.listeRole.indexOf(role), 1);\n        });\n      }\n    });\n  };\n  NavbarComponent.prototype.navigationProjet = function () {};\n  NavbarComponent.prototype.logOut = function () {};\n  __decorate([HostListener('window:scroll'), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], NavbarComponent.prototype, \"onWindowScroll\", null);\n  NavbarComponent = __decorate([Component({\n    selector: \"app-navbar\",\n    templateUrl: \"./navbar.component.html\",\n    styleUrls: [\"./navbar.component.css\"]\n  }), __metadata(\"design:paramtypes\", [Location, ToastrService, ElementRef, RoleService, MembreService, MatDialog, MatDialog, Router, AuthentificationService, ProjetServiceService])], NavbarComponent);\n  return NavbarComponent;\n}();\nexport { NavbarComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}