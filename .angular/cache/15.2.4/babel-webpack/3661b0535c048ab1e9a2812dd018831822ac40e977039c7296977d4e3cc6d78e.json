{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { AuthentificationService } from 'src/app/service/authentification.service';\nimport { ChefProjetServiceService } from 'src/app/service/chef-projet-service.service';\nimport { MembreService } from 'src/app/service/membre.service';\nimport { ProjetServiceService } from 'src/app/service/projet-service.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/authentification.service\";\nimport * as i2 from \"src/app/service/membre.service\";\nimport * as i3 from \"src/app/service/projet-service.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"src/app/service/chef-projet-service.service\";\nvar ModifierProfileComponent = /** @class */function () {\n  function ModifierProfileComponent(authService, membreService, projetService, formBuilder, chefProjetService) {\n    this.authService = authService;\n    this.membreService = membreService;\n    this.projetService = projetService;\n    this.formBuilder = formBuilder;\n    this.chefProjetService = chefProjetService;\n  }\n  ModifierProfileComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.userRolesToken = this.authService.getUserRolesToken(sessionStorage.getItem('token'));\n    if (this.userRolesToken.roles.includes('chefProjet')) {\n      this.role = 'chefProjet';\n      console.log('chefProjet = ', this.userRolesToken.chefProjet);\n    } else {\n      var roleToken = this.userRolesToken.roles;\n      this.role = roleToken.find(function (role) {\n        return role.pk.membreId == _this.membreService.getMembreFromToken().id && role.pk.projetId == _this.projetService.getProjetFromLocalStorage().id;\n      }).type;\n      console.log('Membre = ', this.userRolesToken.membre);\n      this.initForm();\n      this.chargerInformationsMembre();\n    }\n  };\n  ModifierProfileComponent.prototype.chargerInformationsMembre = function () {\n    var membre = this.userRolesToken.membre;\n    this.profilMembreForm.patchValue({\n      id: membre.id,\n      nom: membre.nom,\n      prenom: membre.prenom\n    });\n  };\n  ModifierProfileComponent.prototype.initForm = function () {\n    this.profilMembreForm = this.formBuilder.group({\n      nom: ['', Validators.required],\n      prenom: ['', Validators.required]\n    });\n  };\n  ModifierProfileComponent.prototype.modifierMembre = function () {\n    if (this.profilMembreForm.invalid) {\n      return;\n    }\n    var membre = {\n      nom: this.profilMembreForm.get('nom').value,\n      prenom: this.profilMembreForm.get('prenom').value\n    };\n    this.membreService.modifierMembre(membre).subscribe(function (response) {\n      console.log('Membre modifié avec succès', response);\n    }, function (error) {\n      console.error('Erreur lors de la modification du membre', error);\n    });\n  };\n  ModifierProfileComponent.ɵfac = function ModifierProfileComponent_Factory(t) {\n    return new (t || ModifierProfileComponent)(i0.ɵɵdirectiveInject(i1.AuthentificationService), i0.ɵɵdirectiveInject(i2.MembreService), i0.ɵɵdirectiveInject(i3.ProjetServiceService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.ChefProjetServiceService));\n  };\n  ModifierProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModifierProfileComponent,\n    selectors: [[\"app-modifier-profile\"]],\n    decls: 16,\n    vars: 2,\n    consts: [[1, \"content\"], [3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"id\"], [\"type\", \"text\", \"formControlName\", \"nom\"], [\"type\", \"text\", \"formControlName\", \"prenom\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function ModifierProfileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ModifierProfileComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.modifierMembre();\n        });\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\");\n        i0.ɵɵtext(4, \"ID:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\")(7, \"label\");\n        i0.ɵɵtext(8, \"Nom:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\")(11, \"label\");\n        i0.ɵɵtext(12, \"Pr\\u00E9nom:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 5);\n        i0.ɵɵtext(15, \"Modifier\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.profilMembreForm);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"disabled\", ctx.profilMembreForm.invalid);\n      }\n    },\n    dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName]\n  });\n  return ModifierProfileComponent;\n}();\nexport { ModifierProfileComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}