{"ast":null,"code":"import { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SprintService } from 'src/app/service/sprint.service';\nimport { Sprint } from 'src/app/model/sprint';\nimport { ToastrService } from 'ngx-toastr';\nimport { ProductBacklogService } from 'src/app/service/product-backlog.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service/sprint.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"src/app/service/product-backlog.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/datepicker\";\nimport * as i10 from \"@angular/material/button\";\nfunction AjouterSprintFormComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Ce champ est obligatoire.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AjouterSprintFormComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 16);\n    i0.ɵɵtext(1, \"La date doit \\u00EAtre sup\\u00E9rieure ou \\u00E9gale \\u00E0 la date syst\\u00E8me\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AjouterSprintFormComponent_mat_error_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"La date de fin doit \\u00EAtre ult\\u00E9rieure \\u00E0 la date de lancement.\");\n    i0.ɵɵelementEnd();\n  }\n}\nvar AjouterSprintFormComponent = /** @class */function () {\n  function AjouterSprintFormComponent(fb, sprintService, dialogRef, data, toastr, productBacklogService) {\n    this.fb = fb;\n    this.sprintService = sprintService;\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.toastr = toastr;\n    this.productBacklogService = productBacklogService;\n  }\n  AjouterSprintFormComponent.prototype.onNoClick = function () {\n    this.dialogRef.close();\n  };\n  AjouterSprintFormComponent.prototype.getListSprintsByProductBacklog = function () {\n    var _this = this;\n    this.sprintService.getListSprintsByProductBacklog(this.productBacklogService.getProductBacklogByIdFromLocalStorage()).subscribe(function (data) {\n      _this.sprints = data;\n      if (_this.sprints.length > 0) {\n        var lastSprint = _this.sprints[_this.sprints.length - 1];\n        var lastDateFin = new Date(lastSprint.dateFin);\n        var defaultDateLancement = new Date(lastDateFin.getTime() + 24 * 60 * 60 * 1000);\n        _this.form = _this.fb.group({\n          objectif: ['', Validators.required],\n          dateLancement: [defaultDateLancement, _this.dateSystemValidator()],\n          dateFin: ['', _this.validateDateFin.bind(_this)]\n        });\n      } else {\n        _this.form = _this.fb.group({\n          objectif: ['', Validators.required],\n          dateLancement: ['', _this.dateSystemValidator()],\n          dateFin: ['', _this.validateDateFin.bind(_this)]\n        });\n      }\n    });\n  };\n  AjouterSprintFormComponent.prototype.onSave = function () {\n    var _this = this;\n    var productBacklogId = this.productBacklogService.getProductBacklogByIdFromLocalStorage();\n    var sprint = new Sprint();\n    sprint.objectif = this.form.get('objectif').value;\n    sprint.dateLancement = new Date(this.form.get('dateLancement').value);\n    sprint.dateFin = new Date(this.form.get('dateFin').value);\n    var dateDebProjet = new Date(this.getProjetByIdFromLocalStorage().dateDebut);\n    var dateFinProjet = new Date(this.getProjetByIdFromLocalStorage().dateFin);\n    var conflit = this.sprints.some(function (existingSprint) {\n      var existingSprintDebut = new Date(existingSprint.dateLancement);\n      var existingSprintFin = new Date(existingSprint.dateFin);\n      return sprint.dateLancement >= existingSprintDebut && sprint.dateLancement <= existingSprintFin || sprint.dateFin >= existingSprintDebut && sprint.dateFin <= existingSprintFin || existingSprintDebut >= sprint.dateLancement && existingSprintDebut <= sprint.dateFin || existingSprintFin >= sprint.dateLancement && existingSprintFin <= sprint.dateFin;\n    });\n    if (conflit) {\n      this.toastr.error('La période du sprint se chevauche avec un sprint existant.');\n      return;\n    }\n    if (sprint.dateLancement < dateDebProjet || sprint.dateFin > dateFinProjet) {\n      this.toastr.error('Veuillez ajouter un sprint dans la période de votre projet !');\n      return;\n    }\n    if (this.sprints.length === 0) {\n      var diffTime = Math.abs(sprint.dateFin.getTime() - sprint.dateLancement.getTime());\n      var diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      localStorage.setItem('sprintDuration', diffDays.toString());\n    } else {\n      var storedDuration = localStorage.getItem('sprintDuration');\n      var diffTime = Math.abs(sprint.dateFin.getTime() - sprint.dateLancement.getTime());\n      var diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      if (diffDays !== parseInt(storedDuration)) {\n        this.toastr.error('Les sprints doivent être de méme période !');\n        return;\n      }\n    }\n    sprint.productBacklogId = productBacklogId;\n    this.sprintService.createSprint(sprint, productBacklogId).subscribe(function (response) {\n      _this.toastr.success('Le sprint a été créé avec succès');\n      _this.dialogRef.close(response);\n    }, function (error) {\n      _this.toastr.error('Erreur lors de la création du sprint.');\n      console.error(error);\n    });\n  };\n  AjouterSprintFormComponent.prototype.validateDateFin = function (control) {\n    var _a;\n    var dateLancement = new Date((_a = control.parent) === null || _a === void 0 ? void 0 : _a.get('dateLancement').value);\n    var dateFin = new Date(control.value);\n    if (dateLancement && dateFin && dateLancement >= dateFin) {\n      return {\n        'dateFinInvalide': true\n      };\n    }\n    return null;\n  };\n  AjouterSprintFormComponent.prototype.dateSystemValidator = function () {\n    return function (control) {\n      var dateInput = new Date(control.value);\n      var dateSystem = new Date(Date.now());\n      if (dateInput.getTime() >= dateSystem.getTime()) {\n        return null;\n      } else {\n        return {\n          dateInvalid: true\n        };\n      }\n    };\n  };\n  AjouterSprintFormComponent.prototype.getProjetByIdFromLocalStorage = function () {\n    var projetCourantStr = localStorage.getItem(\"projet\");\n    var projetCourantObj = JSON.parse(projetCourantStr);\n    console.log(projetCourantObj);\n    return projetCourantObj;\n  };\n  AjouterSprintFormComponent.prototype.ngOnInit = function () {\n    this.getListSprintsByProductBacklog();\n  };\n  AjouterSprintFormComponent.ɵfac = function AjouterSprintFormComponent_Factory(t) {\n    return new (t || AjouterSprintFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SprintService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i5.ProductBacklogService));\n  };\n  AjouterSprintFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AjouterSprintFormComponent,\n    selectors: [[\"app-ajouter-sprint-form\"]],\n    decls: 32,\n    vars: 9,\n    consts: [[1, \"form-container\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-title\"], [1, \"form-field\"], [\"matInput\", \"\", \"formControlName\", \"objectif\", \"required\", \"\"], [4, \"ngIf\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"dateLancement\", 3, \"matDatepicker\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker1\", \"\"], [\"class\", \"mat-error\", 4, \"ngIf\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"dateFin\", 3, \"matDatepicker\"], [\"picker2\", \"\"], [1, \"button-row\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"form-button\", 3, \"disabled\"], [1, \"far\", \"fa-plus\"], [\"mat-raised-button\", \"\", \"mat-dialog-close\", \"\", 1, \"form-button\"], [1, \"fas\", \"fa-times\"], [1, \"mat-error\"]],\n    template: function AjouterSprintFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AjouterSprintFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSave();\n        });\n        i0.ɵɵelementStart(1, \"span\", 1);\n        i0.ɵɵtext(2, \"Ajouter votre sprint\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"hr\");\n        i0.ɵɵelementStart(4, \"mat-form-field\", 2)(5, \"mat-label\");\n        i0.ɵɵtext(6, \"Objectif\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 3);\n        i0.ɵɵtemplate(8, AjouterSprintFormComponent_mat_error_8_Template, 2, 0, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-form-field\", 2)(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Date de lancement\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 5)(13, \"mat-datepicker-toggle\", 6)(14, \"mat-datepicker\", null, 7);\n        i0.ɵɵtemplate(16, AjouterSprintFormComponent_mat_error_16_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-form-field\", 2)(18, \"mat-label\");\n        i0.ɵɵtext(19, \"Date de fin\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 9)(21, \"mat-datepicker-toggle\", 6)(22, \"mat-datepicker\", null, 10);\n        i0.ɵɵtemplate(24, AjouterSprintFormComponent_mat_error_24_Template, 2, 0, \"mat-error\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 11)(26, \"button\", 12);\n        i0.ɵɵelement(27, \"i\", 13);\n        i0.ɵɵtext(28, \" Enregistrer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"button\", 14);\n        i0.ɵɵelement(30, \"i\", 15);\n        i0.ɵɵtext(31, \" Annuler\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        var _r1 = i0.ɵɵreference(15);\n        var _r3 = i0.ɵɵreference(23);\n        var tmp_1_0 = void 0;\n        var tmp_7_0 = void 0;\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.form == null ? null : (tmp_1_0 = ctx.form.get(\"objectif\")) == null ? null : tmp_1_0.hasError(\"required\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"matDatepicker\", _r1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.form == null ? null : ctx.form.controls[\"dateLancement\"] == null ? null : ctx.form.controls[\"dateLancement\"].hasError(\"dateInvalid\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"matDatepicker\", _r3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r3);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.form == null ? null : (tmp_7_0 = ctx.form.get(\"dateFin\")) == null ? null : tmp_7_0.hasError(\"dateFinInvalide\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n      }\n    },\n    dependencies: [i6.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i3.MatDialogClose, i1.FormGroupDirective, i1.FormControlName, i7.MatInput, i8.MatFormField, i8.MatLabel, i8.MatError, i8.MatSuffix, i9.MatDatepicker, i9.MatDatepickerInput, i9.MatDatepickerToggle, i10.MatButton],\n    styles: [\".form-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  padding: 20px;\\n}\\n\\n.form-title[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 24px;\\n  padding: 20px 0;\\n  background-color: lightgrey;\\n}\\n\\n.form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin-bottom: 20px;\\n}\\n\\n.button-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  width: 100%;\\n  margin-top: 20px;\\n}\\n\\n.form-button[_ngcontent-%COMP%] {\\n  width: 120px;\\n}\"]\n  });\n  return AjouterSprintFormComponent;\n}();\nexport { AjouterSprintFormComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}