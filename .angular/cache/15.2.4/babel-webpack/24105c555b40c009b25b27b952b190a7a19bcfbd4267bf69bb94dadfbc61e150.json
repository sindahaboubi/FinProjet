{"ast":null,"code":"import { FormBuilder } from '@angular/forms';\nimport { ChefProjet } from 'src/app/model/chef-projet';\nimport { AuthentificationService } from 'src/app/service/authentification.service';\nimport { ChefProjetServiceService } from 'src/app/service/chef-projet-service.service';\nimport { MembreService } from 'src/app/service/membre.service';\nimport { ProjetServiceService } from 'src/app/service/projet-service.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/authentification.service\";\nimport * as i2 from \"src/app/service/membre.service\";\nimport * as i3 from \"src/app/service/projet-service.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"src/app/service/chef-projet-service.service\";\nvar ModifierProfileComponent = /** @class */function () {\n  function ModifierProfileComponent(authService, membreService, projetService, formBuilder, chefProjetService) {\n    this.authService = authService;\n    this.membreService = membreService;\n    this.projetService = projetService;\n    this.formBuilder = formBuilder;\n    this.chefProjetService = chefProjetService;\n    this.chefProjet1 = new ChefProjet(); // Créez une instance de ChefProjet pour lier les données du formulaire\n  }\n\n  ModifierProfileComponent.prototype.ngOnInit = function () {\n    var _this = this;\n    this.userRolesToken = this.authService.getUserRolesToken(sessionStorage.getItem('token'));\n    if (this.userRolesToken.roles.includes('chefProjet')) {\n      this.role = 'chefProjet';\n      console.log('chefProjet = ', this.userRolesToken.chefProjet);\n      console.log('photo = ', this.userRolesToken.chefProjet.photo);\n      this.base64Image = 'data:image/jpeg;base64,' + this.arrayBufferToBase64(this.userRolesToken.chefProjet.photo);\n    } else {\n      var roleToken = this.userRolesToken.roles;\n      this.role = roleToken.find(function (role) {\n        return role.pk.membreId == _this.membreService.getMembreFromToken().id && role.pk.projetId == _this.projetService.getProjetFromLocalStorage().id;\n      }).type;\n      console.log('Membre = ', this.userRolesToken.membre);\n    }\n  };\n  ModifierProfileComponent.prototype.arrayBufferToBase64 = function (buffer) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    var len = bytes.byteLength;\n    for (var i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  };\n  ModifierProfileComponent.prototype.modifierChefProjet = function () {\n    this.chefProjetService.modifierChefProjet(this.chefProjet1).subscribe(function (response) {\n      console.log('Profil du chef de projet modifié avec succès');\n      // Ajoutez ici le code supplémentaire que vous souhaitez exécuter après la modification du profil du chef de projet\n    }, function (error) {\n      console.error('Une erreur s\\'est produite lors de la modification du profil du chef de projet', error);\n      // Gérez les erreurs ici ou affichez un message d'erreur approprié à l'utilisateur\n    });\n  };\n\n  ModifierProfileComponent.ɵfac = function ModifierProfileComponent_Factory(t) {\n    return new (t || ModifierProfileComponent)(i0.ɵɵdirectiveInject(i1.AuthentificationService), i0.ɵɵdirectiveInject(i2.MembreService), i0.ɵɵdirectiveInject(i3.ProjetServiceService), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.ChefProjetServiceService));\n  };\n  ModifierProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModifierProfileComponent,\n    selectors: [[\"app-modifier-profile\"]],\n    decls: 1,\n    vars: 0,\n    consts: [[1, \"content\"]],\n    template: function ModifierProfileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n    }\n  });\n  return ModifierProfileComponent;\n}();\nexport { ModifierProfileComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}